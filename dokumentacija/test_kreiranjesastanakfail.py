# Generated by Selenium IDE
import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager


class TestKreiranjesastanakfail:
    def setup_method(self, method):
        # Use WebDriverManager to install and initialize the Chrome driver
        self.driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
        self.vars = {}
        self.driver.set_window_size(726, 816)

    def teardown_method(self, method):
        self.driver.quit()

    def test_kreiranjesastanakfail(self):
        driver = self.driver
        wait = WebDriverWait(driver, 10)

        # Step 1: Open the login page
        driver.get("https://ezgrada-2.onrender.com/login")

        # Step 2: Login process
        email_field = wait.until(EC.presence_of_element_located((By.ID, ":R2alafnnb:")))
        email_field.click()
        email_field.send_keys("branko@gmail.com")

        password_field = wait.until(EC.presence_of_element_located((By.ID, ":R2elafnnb:")))
        password_field.click()
        password_field.send_keys("glupalozinka")

        login_button = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".css-beuub8")))
        login_button.click()

        # Step 3: Mouse Over (Correctly Use `ActionChains`)
        element = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, ".css-beuub8")))
        actions = ActionChains(driver)
        actions.move_to_element(element).perform()  # Corrected syntax

        # Mouse Out (No additional arguments)
        body_element = driver.find_element(By.CSS_SELECTOR, "body")
        actions.move_to_element(body_element).perform()

        # Step 4: Navigate to create a meeting
        create_meeting_button = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".chakra-card__root:nth-child(3) .chakra-button")))
        create_meeting_button.click()

        new_meeting_button = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".css-vtsccc > .chakra-button:nth-child(1)")))
        new_meeting_button.click()

        # Step 5: Fill in meeting details
        wait.until(EC.element_to_be_clickable((By.NAME, "vrijeme"))).send_keys("2025-02-02T21:00")
        wait.until(EC.element_to_be_clickable((By.NAME, "mjesto"))).send_keys("Zagreb")
        wait.until(EC.element_to_be_clickable((By.NAME, "sazetak"))).send_keys("Sazetak")

        agenda_field = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, ".css-1145hk9")))
        agenda_field.click()
        agenda_field.send_keys("tocka")

        add_button = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".css-bpufky")))
        add_button.click()

        confirm_button = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".css-11ny6of")))
        confirm_button.click()

        # Step 6: Finalize
        finalize_button = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".css-1bky6y2")))
        finalize_button.click()
